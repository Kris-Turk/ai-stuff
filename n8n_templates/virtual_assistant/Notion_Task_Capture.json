{
  "name": "Notion Task Capture",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -860,
        -300
      ],
      "id": "83809c99-6cc6-4f70-9e89-a05c10907378",
      "name": "Telegram Trigger",
      "webhookId": "113659e7-ee7e-454e-9624-eb34fb166dd5",
      "credentials": {
        "telegramApi": {
          "id": "2ynFujuuBf3qzubL",
          "name": "Notion GTD Manager Bot"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=You are Task Manager Assistant, a virtual assistant designed to help users manage their task list effectively using the Getting Things Done (GTD) methodology. Your goal is to ensure that tasks are created, updated, and tracked properly based on previous tasks and established rules.\n\nGeneral Instructions:\nAlways retrieve previous tasks before processing any new request.\nWhen creating a new task, check existing tasks for valid inputs, especially for \"Who\" (people's names). For example, if the input is \"Cat\", infer that the \"Who\" field should be \"Cat Dearlove\", based on previous tasks. Some fields are case-sensitive.\nThe current date and time is: {{ $now }}.\nTask Creation & Defaults:\nIf the user does not specify a due date, set it to todayâ€™s date.\nIf the user does not specify a location (Where), set it to \"Office\".\nIf the user does not specify an assignee (Who), set it to \"Self\".\nIf the user does not specify a status, set it to \"Not started\".\nTask Updates & Processing:\nUpdate or create a new task based on the user's request.\nNot all task properties need to be filled in; only update relevant fields.\nEnsure clarity, accuracy, and consistency when managing tasks."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        500,
        -320
      ],
      "id": "a96e3984-78c0-402c-a54a-f05bf1e69424",
      "name": "AI Agent",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "o3-mini",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        220,
        100
      ],
      "id": "3eb93f7a-7c69-45fe-8cd2-56b29981a156",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "0cs0RBSsQ3W1eoL7",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.text }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        400,
        100
      ],
      "id": "dd3166f0-2c21-40a5-beac-252fa2d199e3",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c0c89d99-7bff-44d5-89e3-aeafccbc1668",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -560,
        -300
      ],
      "id": "558c7bde-209e-4df7-b6af-33137c375f5d",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -320,
        -100
      ],
      "id": "b9556768-57c5-49a2-8b3f-37596bba2e73",
      "name": "Download Voice File",
      "webhookId": "595965b7-ec6c-48a9-bd6c-271ea6da5c4c",
      "credentials": {
        "telegramApi": {
          "id": "2ynFujuuBf3qzubL",
          "name": "Notion GTD Manager Bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        0,
        -100
      ],
      "id": "1863eeeb-731d-4fcb-91b5-1d40e9ae5873",
      "name": "Transcribe File",
      "credentials": {
        "openAiApi": {
          "id": "0cs0RBSsQ3W1eoL7",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "91b6589b-be64-4d2e-9cc3-3b71a3ad25a7",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -140,
        -320
      ],
      "id": "8eadd48a-939b-4d2c-bb59-90f63db51d4b",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Gets tasks due from past 7 days and in future, that are not completed",
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "d4f68170-dcf6-4a02-a064-8299e5a7a816",
          "mode": "list",
          "cachedResultName": "GTD - Tasks Table",
          "cachedResultUrl": "https://www.notion.so/d4f68170dcf64a02a0648299e5a7a816"
        },
        "limit": 15,
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "key": "Due Date|date",
              "condition": "after",
              "date": "={{ new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString() }}"
            },
            {
              "key": "Status|status",
              "condition": "does_not_equal",
              "statusValue": "Done"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        580,
        100
      ],
      "id": "7eb23e3a-04fd-469a-a82f-5ae7f3fb9e85",
      "name": "Get Tasks",
      "notesInFlow": true,
      "credentials": {
        "notionApi": {
          "id": "AkV96ZCxbZ6MteYc",
          "name": "Notion account"
        }
      },
      "notes": "Get Tasks"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Update tasks in Notion database (if appropriate)",
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "={{ $fromAI('id','id of database page to update') }}",
          "mode": "id"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Status|status",
              "statusValue": "={{ $fromAI('task_status','current status of task') }}"
            },
            {
              "key": "Who|multi_select",
              "multiSelectValue": "={{ $fromAI('who','array of people the task relates to') }}"
            },
            {
              "key": "Assigned To|multi_select",
              "multiSelectValue": "={{ $fromAI('assigned_to','array of people working on the task') }}"
            },
            {
              "key": "Company|multi_select",
              "multiSelectValue": "={{ $fromAI('company','array of companies work is being done for') }}"
            },
            {
              "key": "Due Date|date",
              "includeTime": false,
              "date": "={{ $fromAI('due_date','date work is expected to be actioned') }}"
            },
            {
              "key": "Title|title",
              "title": "={{ $fromAI('title','main title of task page') }}"
            },
            {
              "key": "Where|multi_select",
              "multiSelectValue": "={{ $fromAI('where','location work would be carried out') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        920,
        100
      ],
      "id": "f422c4e3-20a9-45a5-9707-8f1679ba026c",
      "name": "Update Tasks",
      "credentials": {
        "notionApi": {
          "id": "AkV96ZCxbZ6MteYc",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Create new tasks in Notion database (if appropriate), before this task is used the \"Get tasks\" task should be used.",
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "d4f68170-dcf6-4a02-a064-8299e5a7a816",
          "mode": "list",
          "cachedResultName": "GTD - Tasks Table",
          "cachedResultUrl": "https://www.notion.so/d4f68170dcf64a02a0648299e5a7a816"
        },
        "title": "={{ $fromAI('title','main title of task page') }}",
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Assigned To|multi_select",
              "multiSelectValue": "={{ $fromAI('assigned_to','Array of people who will work on task') }}"
            },
            {
              "key": "Due Date|date",
              "includeTime": false,
              "date": "={{ $fromAI('due_date','date work is expected to be actioned') }}"
            },
            {
              "key": "Status|status",
              "statusValue": "={{ $fromAI('task_status','current status of task') }}"
            },
            {
              "key": "Where|multi_select",
              "multiSelectValue": "={{ $fromAI('where','location work would be carried out') }}"
            },
            {
              "key": "Who|multi_select",
              "multiSelectValue": "={{ $fromAI('who','array of people the task relates to') }}"
            }
          ]
        },
        "blockUi": {
          "blockValues": [
            {
              "richText": true,
              "text": {
                "text": [
                  {
                    "text": "={{ $fromAI('body','content of task') }}",
                    "annotationUi": {}
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        740,
        100
      ],
      "id": "d197cb12-9ed3-45c3-b23a-89a8f93a5b8b",
      "name": "Create Tasks",
      "notesInFlow": false,
      "credentials": {
        "notionApi": {
          "id": "AkV96ZCxbZ6MteYc",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c0c89d99-7bff-44d5-89e3-aeafccbc1668",
                    "leftValue": "={{ $('Telegram Trigger').item.json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        900,
        -320
      ],
      "id": "46727a90-c1c9-44c0-bc48-9887d45dc2ae",
      "name": "Switch1"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.output }}",
        "voice": "nova",
        "options": {
          "speed": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1120,
        -120
      ],
      "id": "19a5d92a-c509-4fd4-89b4-41e84de0f464",
      "name": "Generate Audio",
      "credentials": {
        "openAiApi": {
          "id": "0cs0RBSsQ3W1eoL7",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1340,
        -340
      ],
      "id": "bbbb2e4a-a634-48f0-8cc2-b9ecd1c1f0ec",
      "name": "Respond Text",
      "webhookId": "2f0ad6fb-80ed-480c-961f-8f9d35453940",
      "credentials": {
        "telegramApi": {
          "id": "2ynFujuuBf3qzubL",
          "name": "Notion GTD Manager Bot"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1340,
        -120
      ],
      "id": "9b71cee7-3926-4f62-a44b-89df919be08a",
      "name": "Respond Audio",
      "webhookId": "76311877-885f-493b-a329-3055fb49b75c",
      "credentials": {
        "telegramApi": {
          "id": "2ynFujuuBf3qzubL",
          "name": "Notion GTD Manager Bot"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Voice File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe File": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Voice File": {
      "main": [
        [
          {
            "node": "Transcribe File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Tasks": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Tasks": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Tasks": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Respond Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Audio": {
      "main": [
        [
          {
            "node": "Respond Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond Text": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "da0ac313-f905-4b9e-8f8a-2c5ee8124280",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1dca8ca0474f36543bf9c8b461abbb016e444e1ae134a38c9a4fbbb75ce88c97"
  },
  "id": "iWC0wFfskxGStCYI",
  "tags": []
}